// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: launch/request.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Request_Status int32

const (
	Request_PENDING  Request_Status = 0
	Request_APPROVED Request_Status = 1
	Request_REJECTED Request_Status = 2
)

var Request_Status_name = map[int32]string{
	0: "PENDING",
	1: "APPROVED",
	2: "REJECTED",
}

var Request_Status_value = map[string]int32{
	"PENDING":  0,
	"APPROVED": 1,
	"REJECTED": 2,
}

func (x Request_Status) String() string {
	return proto.EnumName(Request_Status_name, int32(x))
}

func (Request_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{0, 0}
}

type Request struct {
	LaunchID  uint64         `protobuf:"varint,1,opt,name=launchID,proto3" json:"launchID,omitempty"`
	RequestID uint64         `protobuf:"varint,2,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Creator   string         `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt int64          `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Content   RequestContent `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`
	Status    Request_Status `protobuf:"varint,6,opt,name=status,proto3,enum=tendermint.spn.launch.Request_Status" json:"status,omitempty"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return m.Size()
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetLaunchID() uint64 {
	if m != nil {
		return m.LaunchID
	}
	return 0
}

func (m *Request) GetRequestID() uint64 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *Request) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Request) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Request) GetContent() RequestContent {
	if m != nil {
		return m.Content
	}
	return RequestContent{}
}

func (m *Request) GetStatus() Request_Status {
	if m != nil {
		return m.Status
	}
	return Request_PENDING
}

type RequestContent struct {
	// Types that are valid to be assigned to Content:
	//	*RequestContent_GenesisAccount
	//	*RequestContent_VestingAccount
	//	*RequestContent_GenesisValidator
	//	*RequestContent_AccountRemoval
	//	*RequestContent_ValidatorRemoval
	//	*RequestContent_ParamChange
	Content isRequestContent_Content `protobuf_oneof:"content"`
}

func (m *RequestContent) Reset()         { *m = RequestContent{} }
func (m *RequestContent) String() string { return proto.CompactTextString(m) }
func (*RequestContent) ProtoMessage()    {}
func (*RequestContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{1}
}
func (m *RequestContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestContent.Merge(m, src)
}
func (m *RequestContent) XXX_Size() int {
	return m.Size()
}
func (m *RequestContent) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestContent.DiscardUnknown(m)
}

var xxx_messageInfo_RequestContent proto.InternalMessageInfo

type isRequestContent_Content interface {
	isRequestContent_Content()
	MarshalTo([]byte) (int, error)
	Size() int
}

type RequestContent_GenesisAccount struct {
	GenesisAccount *GenesisAccount `protobuf:"bytes,1,opt,name=genesisAccount,proto3,oneof" json:"genesisAccount,omitempty"`
}
type RequestContent_VestingAccount struct {
	VestingAccount *VestingAccount `protobuf:"bytes,2,opt,name=vestingAccount,proto3,oneof" json:"vestingAccount,omitempty"`
}
type RequestContent_GenesisValidator struct {
	GenesisValidator *GenesisValidator `protobuf:"bytes,3,opt,name=genesisValidator,proto3,oneof" json:"genesisValidator,omitempty"`
}
type RequestContent_AccountRemoval struct {
	AccountRemoval *AccountRemoval `protobuf:"bytes,4,opt,name=accountRemoval,proto3,oneof" json:"accountRemoval,omitempty"`
}
type RequestContent_ValidatorRemoval struct {
	ValidatorRemoval *ValidatorRemoval `protobuf:"bytes,5,opt,name=validatorRemoval,proto3,oneof" json:"validatorRemoval,omitempty"`
}
type RequestContent_ParamChange struct {
	ParamChange *ParamChange `protobuf:"bytes,6,opt,name=paramChange,proto3,oneof" json:"paramChange,omitempty"`
}

func (*RequestContent_GenesisAccount) isRequestContent_Content()   {}
func (*RequestContent_VestingAccount) isRequestContent_Content()   {}
func (*RequestContent_GenesisValidator) isRequestContent_Content() {}
func (*RequestContent_AccountRemoval) isRequestContent_Content()   {}
func (*RequestContent_ValidatorRemoval) isRequestContent_Content() {}
func (*RequestContent_ParamChange) isRequestContent_Content()      {}

func (m *RequestContent) GetContent() isRequestContent_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RequestContent) GetGenesisAccount() *GenesisAccount {
	if x, ok := m.GetContent().(*RequestContent_GenesisAccount); ok {
		return x.GenesisAccount
	}
	return nil
}

func (m *RequestContent) GetVestingAccount() *VestingAccount {
	if x, ok := m.GetContent().(*RequestContent_VestingAccount); ok {
		return x.VestingAccount
	}
	return nil
}

func (m *RequestContent) GetGenesisValidator() *GenesisValidator {
	if x, ok := m.GetContent().(*RequestContent_GenesisValidator); ok {
		return x.GenesisValidator
	}
	return nil
}

func (m *RequestContent) GetAccountRemoval() *AccountRemoval {
	if x, ok := m.GetContent().(*RequestContent_AccountRemoval); ok {
		return x.AccountRemoval
	}
	return nil
}

func (m *RequestContent) GetValidatorRemoval() *ValidatorRemoval {
	if x, ok := m.GetContent().(*RequestContent_ValidatorRemoval); ok {
		return x.ValidatorRemoval
	}
	return nil
}

func (m *RequestContent) GetParamChange() *ParamChange {
	if x, ok := m.GetContent().(*RequestContent_ParamChange); ok {
		return x.ParamChange
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestContent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestContent_GenesisAccount)(nil),
		(*RequestContent_VestingAccount)(nil),
		(*RequestContent_GenesisValidator)(nil),
		(*RequestContent_AccountRemoval)(nil),
		(*RequestContent_ValidatorRemoval)(nil),
		(*RequestContent_ParamChange)(nil),
	}
}

type AccountRemoval struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *AccountRemoval) Reset()         { *m = AccountRemoval{} }
func (m *AccountRemoval) String() string { return proto.CompactTextString(m) }
func (*AccountRemoval) ProtoMessage()    {}
func (*AccountRemoval) Descriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{2}
}
func (m *AccountRemoval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRemoval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRemoval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRemoval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRemoval.Merge(m, src)
}
func (m *AccountRemoval) XXX_Size() int {
	return m.Size()
}
func (m *AccountRemoval) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRemoval.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRemoval proto.InternalMessageInfo

func (m *AccountRemoval) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ValidatorRemoval struct {
	ValAddress string `protobuf:"bytes,1,opt,name=valAddress,proto3" json:"valAddress,omitempty"`
}

func (m *ValidatorRemoval) Reset()         { *m = ValidatorRemoval{} }
func (m *ValidatorRemoval) String() string { return proto.CompactTextString(m) }
func (*ValidatorRemoval) ProtoMessage()    {}
func (*ValidatorRemoval) Descriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{3}
}
func (m *ValidatorRemoval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidatorRemoval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidatorRemoval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidatorRemoval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorRemoval.Merge(m, src)
}
func (m *ValidatorRemoval) XXX_Size() int {
	return m.Size()
}
func (m *ValidatorRemoval) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorRemoval.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorRemoval proto.InternalMessageInfo

func (m *ValidatorRemoval) GetValAddress() string {
	if m != nil {
		return m.ValAddress
	}
	return ""
}

type ParamChange struct {
	LaunchID uint64 `protobuf:"varint,1,opt,name=launchID,proto3" json:"launchID,omitempty"`
	Module   string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Param    string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	Value    []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *ParamChange) Reset()         { *m = ParamChange{} }
func (m *ParamChange) String() string { return proto.CompactTextString(m) }
func (*ParamChange) ProtoMessage()    {}
func (*ParamChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_028e4b0ce31bf039, []int{4}
}
func (m *ParamChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ParamChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ParamChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ParamChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamChange.Merge(m, src)
}
func (m *ParamChange) XXX_Size() int {
	return m.Size()
}
func (m *ParamChange) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamChange.DiscardUnknown(m)
}

var xxx_messageInfo_ParamChange proto.InternalMessageInfo

func (m *ParamChange) GetLaunchID() uint64 {
	if m != nil {
		return m.LaunchID
	}
	return 0
}

func (m *ParamChange) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *ParamChange) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func (m *ParamChange) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("tendermint.spn.launch.Request_Status", Request_Status_name, Request_Status_value)
	proto.RegisterType((*Request)(nil), "tendermint.spn.launch.Request")
	proto.RegisterType((*RequestContent)(nil), "tendermint.spn.launch.RequestContent")
	proto.RegisterType((*AccountRemoval)(nil), "tendermint.spn.launch.AccountRemoval")
	proto.RegisterType((*ValidatorRemoval)(nil), "tendermint.spn.launch.ValidatorRemoval")
	proto.RegisterType((*ParamChange)(nil), "tendermint.spn.launch.ParamChange")
}

func init() { proto.RegisterFile("launch/request.proto", fileDescriptor_028e4b0ce31bf039) }

var fileDescriptor_028e4b0ce31bf039 = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xb5, 0xd3, 0x34, 0x69, 0x26, 0x55, 0x14, 0x8d, 0xf2, 0x7d, 0x32, 0x55, 0x65, 0x22, 0x4b,
	0x88, 0x2c, 0xc0, 0x11, 0x61, 0xc3, 0x86, 0x45, 0xd2, 0xa4, 0x3f, 0x08, 0xb5, 0xd1, 0x14, 0xb2,
	0x60, 0x53, 0x4d, 0x9d, 0x91, 0x63, 0x61, 0xcf, 0x18, 0xcf, 0x38, 0xc0, 0x9e, 0x07, 0xe0, 0x61,
	0xfa, 0x10, 0x5d, 0x56, 0xac, 0x58, 0x21, 0xd4, 0xbe, 0x08, 0xf2, 0xcc, 0x38, 0xad, 0x0d, 0x0d,
	0xec, 0x7c, 0xef, 0x3d, 0xe7, 0xf8, 0xdc, 0xb9, 0x77, 0x06, 0x74, 0x42, 0x9c, 0x52, 0x6f, 0xd1,
	0x4f, 0xc8, 0x87, 0x94, 0x70, 0xe1, 0xc6, 0x09, 0x13, 0x0c, 0xfe, 0x27, 0x08, 0x9d, 0x93, 0x24,
	0x0a, 0xa8, 0x70, 0x79, 0x4c, 0x5d, 0x05, 0xda, 0xe9, 0xf8, 0xcc, 0x67, 0x12, 0xd1, 0xcf, 0xbe,
	0x14, 0x78, 0xe7, 0x81, 0xc7, 0x78, 0xc4, 0xf8, 0x99, 0x2a, 0xa8, 0x40, 0x97, 0x76, 0xb5, 0xba,
	0x4f, 0x28, 0xe1, 0x01, 0x3f, 0xc3, 0x9e, 0xc7, 0x52, 0x2a, 0x4a, 0xd5, 0x25, 0xe1, 0x22, 0xa0,
	0x7e, 0xa9, 0x6a, 0x97, 0xb8, 0x4b, 0x1c, 0x06, 0x73, 0x2c, 0x58, 0xa2, 0xea, 0xce, 0x45, 0x05,
	0xd4, 0x91, 0x72, 0x0d, 0x77, 0xc0, 0x96, 0x42, 0x1f, 0x8d, 0x2d, 0xb3, 0x6b, 0xf6, 0xaa, 0x68,
	0x15, 0xc3, 0x5d, 0xd0, 0xd0, 0xcd, 0x1d, 0x8d, 0xad, 0x8a, 0x2c, 0xde, 0x26, 0xa0, 0x05, 0xea,
	0x5e, 0x42, 0x32, 0x59, 0x6b, 0xa3, 0x6b, 0xf6, 0x1a, 0x28, 0x0f, 0x33, 0x9e, 0xfc, 0x24, 0xf3,
	0xa1, 0xb0, 0xaa, 0x5d, 0xb3, 0xb7, 0x81, 0x6e, 0x13, 0x70, 0x02, 0xea, 0x1e, 0xa3, 0x82, 0x50,
	0x61, 0x6d, 0x76, 0xcd, 0x5e, 0x73, 0xf0, 0xc8, 0xfd, 0xe3, 0x99, 0xb9, 0xda, 0xe2, 0x9e, 0x02,
	0x8f, 0xaa, 0x97, 0x3f, 0x1e, 0x1a, 0x28, 0xe7, 0xc2, 0x97, 0xa0, 0xc6, 0x05, 0x16, 0x29, 0xb7,
	0x6a, 0x5d, 0xb3, 0xd7, 0xfa, 0x9b, 0x8a, 0x7b, 0x2a, 0xc1, 0x48, 0x93, 0x9c, 0x67, 0xa0, 0xa6,
	0x32, 0xb0, 0x09, 0xea, 0xd3, 0xc9, 0xf1, 0xf8, 0xe8, 0xf8, 0xa0, 0x6d, 0xc0, 0x6d, 0xb0, 0x35,
	0x9c, 0x4e, 0xd1, 0xc9, 0x6c, 0x32, 0x6e, 0x9b, 0x59, 0x84, 0x26, 0xaf, 0x26, 0x7b, 0x6f, 0x26,
	0xe3, 0x76, 0xc5, 0xf9, 0x52, 0x05, 0xad, 0xa2, 0x27, 0x78, 0x02, 0x5a, 0xfa, 0x90, 0x87, 0x6a,
	0x02, 0xf2, 0x0c, 0xef, 0x6f, 0xe9, 0xa0, 0x00, 0x3e, 0x34, 0x50, 0x89, 0x9e, 0x09, 0xea, 0x99,
	0xe6, 0x82, 0x95, 0xb5, 0x82, 0xb3, 0x02, 0x38, 0x13, 0x2c, 0xd2, 0xe1, 0x5b, 0xd0, 0xd6, 0xbf,
	0x98, 0xe5, 0x5b, 0x20, 0xc7, 0xd5, 0x1c, 0x3c, 0x5e, 0xef, 0x71, 0x05, 0x3f, 0x34, 0xd0, 0x6f,
	0x12, 0x99, 0x4f, 0xbd, 0x73, 0x88, 0x44, 0x6c, 0x89, 0x43, 0x39, 0xe7, 0xfb, 0x7d, 0x0e, 0x0b,
	0xe0, 0xcc, 0x67, 0x91, 0x9e, 0xf9, 0x5c, 0xad, 0x69, 0x2e, 0xb9, 0xb9, 0xd6, 0xe7, 0xac, 0x04,
	0xcf, 0x7c, 0x96, 0x25, 0xe0, 0x3e, 0x68, 0xc6, 0x38, 0xc1, 0xd1, 0xde, 0x02, 0x53, 0x9f, 0xc8,
	0x55, 0x69, 0x0e, 0x9c, 0x7b, 0x14, 0xa7, 0xb7, 0xc8, 0x43, 0x03, 0xdd, 0x25, 0x8e, 0x1a, 0xab,
	0xa5, 0x75, 0xc6, 0xa0, 0x55, 0xec, 0x06, 0x0e, 0x40, 0x1d, 0xcf, 0xe7, 0x09, 0xe1, 0x5c, 0x8e,
	0xbf, 0x31, 0xb2, 0xbe, 0x5d, 0x3c, 0xed, 0xe8, 0xeb, 0x3c, 0x54, 0x95, 0x53, 0x91, 0x04, 0xd4,
	0x47, 0x39, 0xd0, 0x79, 0x0d, 0xda, 0xe5, 0x06, 0xe0, 0x0b, 0x00, 0x96, 0x38, 0x1c, 0xfe, 0xa3,
	0xd4, 0x1d, 0xac, 0x13, 0x81, 0xe6, 0x1d, 0xf3, 0x6b, 0x2f, 0xf5, 0xff, 0xa0, 0x16, 0xb1, 0x79,
	0x1a, 0x12, 0xb9, 0x59, 0x0d, 0xa4, 0x23, 0xd8, 0x01, 0x9b, 0xb2, 0x61, 0x7d, 0x99, 0x55, 0x90,
	0x65, 0x97, 0x38, 0x4c, 0x89, 0x1c, 0xef, 0x36, 0x52, 0xc1, 0x68, 0xff, 0xf2, 0xda, 0x36, 0xaf,
	0xae, 0x6d, 0xf3, 0xe7, 0xb5, 0x6d, 0x7e, 0xbd, 0xb1, 0x8d, 0xab, 0x1b, 0xdb, 0xf8, 0x7e, 0x63,
	0x1b, 0xef, 0x9e, 0xf8, 0x81, 0x58, 0xa4, 0xe7, 0xae, 0xc7, 0xa2, 0x3e, 0x8f, 0x49, 0x18, 0xf2,
	0x05, 0x8e, 0x49, 0x9f, 0x12, 0xf1, 0x91, 0x25, 0xef, 0xfb, 0x9f, 0xfa, 0xfa, 0x69, 0x12, 0x9f,
	0x63, 0xc2, 0xcf, 0x6b, 0xf2, 0x3d, 0x7a, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x52, 0xa1,
	0x80, 0x4b, 0x05, 0x00, 0x00,
}

func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x30
	}
	{
		size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRequest(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.CreatedAt != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RequestID != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.RequestID))
		i--
		dAtA[i] = 0x10
	}
	if m.LaunchID != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.LaunchID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RequestContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Content != nil {
		{
			size := m.Content.Size()
			i -= size
			if _, err := m.Content.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *RequestContent_GenesisAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_GenesisAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GenesisAccount != nil {
		{
			size, err := m.GenesisAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *RequestContent_VestingAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_VestingAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VestingAccount != nil {
		{
			size, err := m.VestingAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *RequestContent_GenesisValidator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_GenesisValidator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GenesisValidator != nil {
		{
			size, err := m.GenesisValidator.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *RequestContent_AccountRemoval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_AccountRemoval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AccountRemoval != nil {
		{
			size, err := m.AccountRemoval.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *RequestContent_ValidatorRemoval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_ValidatorRemoval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ValidatorRemoval != nil {
		{
			size, err := m.ValidatorRemoval.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *RequestContent_ParamChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestContent_ParamChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ParamChange != nil {
		{
			size, err := m.ParamChange.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRequest(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *AccountRemoval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRemoval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountRemoval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ValidatorRemoval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidatorRemoval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidatorRemoval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValAddress) > 0 {
		i -= len(m.ValAddress)
		copy(dAtA[i:], m.ValAddress)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.ValAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ParamChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ParamChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ParamChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Param) > 0 {
		i -= len(m.Param)
		copy(dAtA[i:], m.Param)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Param)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Module) > 0 {
		i -= len(m.Module)
		copy(dAtA[i:], m.Module)
		i = encodeVarintRequest(dAtA, i, uint64(len(m.Module)))
		i--
		dAtA[i] = 0x12
	}
	if m.LaunchID != 0 {
		i = encodeVarintRequest(dAtA, i, uint64(m.LaunchID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRequest(dAtA []byte, offset int, v uint64) int {
	offset -= sovRequest(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LaunchID != 0 {
		n += 1 + sovRequest(uint64(m.LaunchID))
	}
	if m.RequestID != 0 {
		n += 1 + sovRequest(uint64(m.RequestID))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovRequest(uint64(m.CreatedAt))
	}
	l = m.Content.Size()
	n += 1 + l + sovRequest(uint64(l))
	if m.Status != 0 {
		n += 1 + sovRequest(uint64(m.Status))
	}
	return n
}

func (m *RequestContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Content != nil {
		n += m.Content.Size()
	}
	return n
}

func (m *RequestContent_GenesisAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GenesisAccount != nil {
		l = m.GenesisAccount.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *RequestContent_VestingAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VestingAccount != nil {
		l = m.VestingAccount.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *RequestContent_GenesisValidator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GenesisValidator != nil {
		l = m.GenesisValidator.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *RequestContent_AccountRemoval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountRemoval != nil {
		l = m.AccountRemoval.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *RequestContent_ValidatorRemoval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ValidatorRemoval != nil {
		l = m.ValidatorRemoval.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *RequestContent_ParamChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ParamChange != nil {
		l = m.ParamChange.Size()
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}
func (m *AccountRemoval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}

func (m *ValidatorRemoval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ValAddress)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}

func (m *ParamChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LaunchID != 0 {
		n += 1 + sovRequest(uint64(m.LaunchID))
	}
	l = len(m.Module)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.Param)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovRequest(uint64(l))
	}
	return n
}

func sovRequest(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRequest(x uint64) (n int) {
	return sovRequest(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchID", wireType)
			}
			m.LaunchID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestID", wireType)
			}
			m.RequestID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Request_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GenesisAccount{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_GenesisAccount{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VestingAccount{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_VestingAccount{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisValidator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GenesisValidator{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_GenesisValidator{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountRemoval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AccountRemoval{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_AccountRemoval{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorRemoval", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ValidatorRemoval{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_ValidatorRemoval{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParamChange", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ParamChange{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Content = &RequestContent_ParamChange{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRemoval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRemoval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRemoval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidatorRemoval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidatorRemoval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidatorRemoval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ParamChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ParamChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ParamChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchID", wireType)
			}
			m.LaunchID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Module = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Param", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Param = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRequest
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRequest
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = append(m.Value[:0], dAtA[iNdEx:postIndex]...)
			if m.Value == nil {
				m.Value = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRequest(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRequest
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRequest(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRequest
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRequest
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRequest
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRequest
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRequest
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRequest        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRequest          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRequest = fmt.Errorf("proto: unexpected end of group")
)
